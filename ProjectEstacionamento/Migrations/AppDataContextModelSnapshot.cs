// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MinimalApiEstacionamento.Models;

#nullable disable

namespace ProjectEstacionamento.Migrations
{
    [DbContext(typeof(AppDataContext))]
    partial class AppDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.21");

            modelBuilder.Entity("MinimalApiEstacionamento.Models.Carro", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Estacionado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("HoraEntrada")
                        .HasColumnType("TEXT");

                    b.Property<string>("Modelo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Placa")
                        .HasColumnType("TEXT");

                    b.Property<int?>("VagaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VagaId")
                        .IsUnique();

                    b.ToTable("Carros");
                });

            modelBuilder.Entity("MinimalApiEstacionamento.Models.Saida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("HoraEntrada")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("HoraSaida")
                        .HasColumnType("TEXT");

                    b.Property<int>("TempoPermanenciaMinutos")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VeiculoId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("VeiculoPlaca")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Saidas");
                });

            modelBuilder.Entity("MinimalApiEstacionamento.Models.Vaga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Numero")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Ocupada")
                        .HasColumnType("INTEGER");

                    b.Property<string>("VeiculoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Vagas");
                });

            modelBuilder.Entity("MinimalApiEstacionamento.Models.Carro", b =>
                {
                    b.HasOne("MinimalApiEstacionamento.Models.Vaga", "Vaga")
                        .WithOne("Veiculo")
                        .HasForeignKey("MinimalApiEstacionamento.Models.Carro", "VagaId");

                    b.Navigation("Vaga");
                });

            modelBuilder.Entity("MinimalApiEstacionamento.Models.Vaga", b =>
                {
                    b.Navigation("Veiculo");
                });
#pragma warning restore 612, 618
        }
    }
}
